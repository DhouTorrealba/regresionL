import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score

rice_ven = pd.read_csv('arroz.csv')
rice_ven
#
#
#
X = np.array(rice_ven['Year'])
y = np.array(rice_ven['Value'])
z = np.array([2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2042,2052])
plt.scatter(X,y,label='data', color='green')
plt.title('Producción Anual de Arroz')

regresion_lineal = linear_model.LinearRegression()
regresion_lineal.fit(X.reshape(-1,1),y)
#se imprimen los parametros 
print ('\nParametros del modelo de regresión lineal')
print('b (Pendiente) = '+str(regresion_lineal.coef_) + ', a (Punto de corte) =' + str(regresion_lineal.intercept_))
#
pronostico = regresion_lineal.predict(z.reshape(-1,1))

print('\nPronosticos')
for i in range(len(z)):
    print('Predicción para el año {0} = {1} '.format(z[i], pronostico[i]))
    
pronostico_entrenamiento  = regresion_lineal.predict(X.reshape(-1,1))
mse = mean_squared_error(y_true = y, y_pred = pronostico_entrenamiento)
rmse = np.sqrt(mse)
print('\nEvaluación de calidad de la regresión')
print('Error Cuadrático Medio (MSE) = '+str(rmse))
print('Raíz del Error Cuadrático Medio(RMSE) = ' +str(rmse))

r2=regresion_lineal.score(X.reshape(-1,1), y)
print('Coeficiente de determinación R2 = ' +str(r2))

plt.plot(X,pronostico_entrenamiento,label='data', color='orange')
plt.xlabel('Años')
plt.ylabel('Toneladas')
